version: "3"

services:

  api-gateway:
    container_name: api-gateway
    build:
      context: ../api-gateway
    image: api-gateway:latest
    networks:
      - services
    ports:
      - "8080:8080"
    depends_on:
      - order-service
      - warehouse-service
      - user-service
    environment:
      - routers.orders.host=order-service
      - routers.warehouse.host=warehouse-service
      - routers.users.host=user-service

  order-service:
    container_name: order-service
    build:
      context: ../order
    image: order:latest
    networks:
      - services

  warehouse-service:
    container_name: warehouse-service
    build:
      context: ../warehouse
    image: warehouse:latest
    networks:
      - services

  user-service:
    container_name: user-service
    build:
      context: ../user
    image: user:latest
    networks:
      - services

  kafka:
    image: bitnami/kafka:latest
    networks:
      - kafka
    ports:
      - "29092:29092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
#      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS= EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS= INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP= INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME= INTERNAL
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    networks:
      - kafka
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  kafka:
  services: